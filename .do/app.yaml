name: romantic-ai-proposal
services:
# Backend - sin cambios
- name: backend
  source_dir: /backend
  github:
    repo: 1di210299/romantic_ai_proposal
    branch: main
  run_command: python app.py
  environment_slug: python
  instance_count: 1
  instance_size_slug: basic-xxs
  routes:
  - path: /api
    preserve_path_prefix: true
  http_port: 8080
  envs:
  - key: OPENAI_API_KEY
    scope: RUN_TIME
    type: SECRET
  - key: SPACES_DATA_URL
    scope: RUN_TIME
    value: https://romantic-ai-data.sfo3.digitaloceanspaces.com
  - key: FLASK_ENV
    scope: RUN_TIME
    value: production
  - key: FLASK_DEBUG
    scope: RUN_TIME
    value: "False"
  - key: BACKEND_PORT
    scope: RUN_TIME
    value: "8080"

# Frontend - con rutas más explícitas
- name: frontend
  source_dir: /frontend
  github:
    repo: 1di210299/romantic_ai_proposal
    branch: main
  build_command: npm run build
  run_command: npm start
  environment_slug: node-js
  instance_count: 1
  instance_size_slug: basic-xxs
  routes:
  - path: /_next/static
    preserve_path_prefix: true
  - path: /_next
    preserve_path_prefix: true
  - path: /
  http_port: 3000
  envs:
  - key: NEXT_PUBLIC_BACKEND_URL
    scope: RUN_AND_BUILD_TIME
    value: https://starfish-app-kinb4.ondigitalocean.app
  - key: PORT
    scope: RUN_TIME
    value: "3000"